:root {
  --hover-color: limegreen;
  --creating-link-color: blue;
  --link-shadow-selected: gray;
  --link-shadow-adjacent: silver;
  --node-shadow-selected: gray;
  --node-shadow-adjacent: gainsboro;

  --background-color: hsl(43deg 47% 95%);
  --dark-background-color: hsl(43deg 47% 85%);
  --border-color: black;
  --soft-border-color: rgba(125,125,125,.3);
  --accent-color: hsl(43deg 47% 50%);

  --margin: 5px;

  --border: solid 1.5px black;
  --soft-border: solid 1px var(--soft-border-color);

  --shadow: -1px -1px 4px -1px white,
    1px 1px 6px -3px black,
    inset 1px 1px 4px -2px white,
    inset -1px -1px 4px -4px black;
  --shadow-hover: -1px -1px 2px -1px white,
    1px 1px 4px -3px black,
    inset 1px 1px 4px -2px white,
    inset -1px -1px 4px -4px black;
  --shadow-active: inset 1px 1px 4px -2px black,
    inset -1px -1px 4px -4px white;
}

*, *::before, *::after {
  box-sizing: border-box;
}

* {
  overflow-wrap: break-word;
  hyphens: auto;
  min-width: 0px;
  margin: 0px;
}

html {
  font-size: 14px;
}

body {
  font-family: monospace;
  line-height: 1.5;
}

a {
  color: inherit;
  text-decoration: none; /* no underline */
}

svg {
    -webkit-user-select: none; /* webkit (safari, chrome) browsers */
    -moz-user-select: none; /* mozilla browsers */
    -khtml-user-select: none; /* webkit (konqueror) browsers */
    -ms-user-select: none; /* IE10+ */
}

line {
  stroke-linecap: round;
}

.multiple_values {
  background-color:lightgray;
}

.creating_link {
  stroke: var(--creating-link-color);
  stroke-opacity: 1;
  stroke-width: 3;
}

.line_adjacent_shadow {
  stroke: var(--link-shadow-adjacent);
  stroke-opacity: 1;
  stroke-width: 4;
}

.line_shadow {
  stroke: var(--link-shadow-selected);
  stroke-opacity: 1;
  stroke-width: 4;
}

.line_visible {
  stroke-opacity: 1;
  stroke-width: 2;
}

.line_hoverarea{
  stroke: white;
  stroke-width: 10;
  stroke-opacity: 0;
}

.line_hoverarea:hover + .line_visible,
.line_visible:hover{
  /*stroke: var(--hover-color);*/
  stroke-width: 3;
  stroke-opacity: 1;
}

#rubberband {
  stroke: black;
  stroke-dasharray: 5, 5;
  stroke-width: 2px;
  stroke-width: 2px;
  fill-opacity: 0;
  stroke-opacity: 0.8;
}

#graph_name {
  font-size: large;
  text-align: center;
}

.nodes .rubberband_hovering rect{
  stroke-width: 3px;
  stroke-dasharray: 5, 5;
}

.nodes g .node_body {
  pointer-events: all;
  fill: white;
  stroke: black;
  stroke-width: 2px;
}

.nodes g:hover .node_body{
  stroke: var(--hover-color);
  stroke-width: 3px;
}

.nodes g .node_adjacent_shadow {
  pointer-events: all;
  fill: var(--node-shadow-adjacent);
  stroke-width: 0px;
}

.nodes g .node_shadow {
  pointer-events: all;
  fill: var(--node-shadow-selected);
  stroke-width: 0px;
}

.comp {
  border: solid 1.5px;
  margin: 2px;
  padding: 2px;
  overflow: hidden; /* this is to create a new float context */
}

.border {
  border: solid 1.5px var(--border-color);
}

.container {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr
}

button {
  font-family: monospace;
  background-color: white;
  border: 1px solid black;
  font-size: 1rem;
  margin: 2px;
}

.button {
  cursor: pointer;
  text-align: center;
}

select {
  border-color: black;
  font-family: monospace;
  font-size: 1rem;
  width: 100%;
}

option {
  font-family: monospace;
  font-size: 1rem;
}

input {
  font-family: monospace;
  font-size: 1rem;
}

input[type=text], input[type=password] {
  border-style: solid;
  border-width: 1px 1px;
  border-color: black;
  border-radius: 3px;
  box-shadow: inset 1px 1px 4px -2px black,
  inset -1px -1px 4px -4px white;
}

input[type=text]:hover, input[type=password]:hover {
  border-color: black;
}

input.seamless {
  width: 100%;
  border-width: 0px;
  margin: 0px;
  padding: 0px;
  outline: none;
}

.small_button {
  border-radius: 5px;
  border: 1px solid rgba(125,125,125,.3);
  padding: calc(var(--margin) / 2);
  cursor: pointer;
  box-shadow: var(--shadow);
  display: flex;
  align-items: center;
  width: fit-content;
  height: fit-content;
}

.small_button:hover {
  background-color: rgba(125,125,125,.1);
  box-shadow: var(--shadow-hover);
}

.small_button:active {
  box-shadow: var(--shadow-active);
}

input[type=radio], input[type=checkbox] {
  accent-color: var(--accent-color);
  margin: calc(var(--margin) / 2);
  height: min-content;
  align-self: center;
}

input[type=radio]:not(:checked), input[type=checkbox]:not(:checked) {
  cursor: pointer;
}

hr {
  margin: var(--margin) 0px;
}